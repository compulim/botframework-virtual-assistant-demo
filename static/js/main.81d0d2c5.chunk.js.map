{"version":3,"sources":["data/reducer/climateControl.js","data/reducer/audioControl.js","data/reducer/navigation.js","data/rootReducer.js","data/action/adjustTemperature.js","data/action/setDestination.js","data/action/playMusic.js","data/action/tuneRadio.js","data/createStore.js","RightPane.js","AdaptiveCardHostConfig.js","WebChat.js","App.js","serviceWorker.js","index.js","assets/ArtboardElaineCroppedEmptied.png"],"names":["DEFAULT_STATE","driverSideTemperature","outsideTemperature","passengerSideTemperature","nowPlaying","radioStation","estimatedTimeOfArrival","fullAddress","combineReducers","climateControl","state","arguments","length","undefined","_ref","payload","meta","type","updateIn","targetTemperature","navigation","Object","objectSpread","audioControl","targetSong","targetStation","createStore","rootReducer","formatTime","date","hours","Date","getHours","concat","value","count","padding","pad","getMinutes","connect","nowPlayingSong","currentRadioStation","navigationEstimatedTimeOfArrival","navigationFullAddress","_ref2","react_default","a","createElement","className","alt","src","Artboard","AdaptiveCardHostConfig","HostConfig","containerStyles","default","backgroundColor","foregroundColors","subtle","accent","attention","good","warning","emphasis","supportsInteractivity","fontFamily","imageSizes","small","medium","large","actions","actionAlignment","actionsOrientation","buttonSpacing","maxActions","showCard","actionMode","inlineTopMargin","spacing","adaptiveCard","allowCustomStyle","imageSet","imageSize","maxImageHeight","factSet","title","color","size","isSubtle","weight","wrap","maxWidth","WebChat","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","styleSet","createStyleSet","bubbleBackground","bubbleBorder","bubbleTextColor","bubbleFromUserBackground","bubbleFromUserBorder","timestampColor","root","backdropFilter","directLine","store","next","action","activity","name","setDestination","now","Destination","address","formattedAddress","err","console","error","adjustTemperature","tuneRadio","playMusic","webSpeechPonyfillFactory","createBrowserWebSpeechPonyfillFactory","locale","trim","toLowerCase","fetch","getTokenURL","method","res","json","token","userID","createDirectLine","setState","postActivity","from","id","role","subscribe","log","_this$state","botframework_webchat_lib_default","adaptiveCardHostConfig","Component","_default","searchParams","URLSearchParams","window","location","search","get","navigator","language","es","src_WebChat_0","src_RightPane","Boolean","hostname","match","ReactDOM","render","src_App_default","document","getElementById","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.81d0d2c5.chunk.js","sourcesContent":["import updateIn from 'simple-update-in';\n\nimport { ADJUST_TEMPERATURE } from '../action/adjustTemperature';\n\nconst DEFAULT_STATE = {\n  driverSideTemperature: 22,\n  outsideTemperature: 20,\n  passengerSideTemperature: 21\n}\n\nexport default function (state = DEFAULT_STATE, { meta, payload, type }) {\n  switch (type) {\n    case ADJUST_TEMPERATURE:\n      state = updateIn(state, ['driverSideTemperature'], () => payload.targetTemperature);\n      state = updateIn(state, ['passengerSideTemperature'], () => payload.targetTemperature);\n      break;\n\n    default: break;\n  }\n\n  return state;\n}\n","import updateIn from 'simple-update-in';\n\nimport { PLAY_MUSIC } from '../action/playMusic';\nimport { TUNE_RADIO } from '../action/tuneRadio';\n\n\nconst DEFAULT_STATE = {\n  nowPlaying: \"Don't Stop Believing by Journey\",\n  radioStation: \"106.9 FM\"\n}\n\nexport default function (state = DEFAULT_STATE, { meta, payload, type }) {\n  switch (type) {\n    case PLAY_MUSIC:\n      state = updateIn(state, ['nowPlaying'], () => payload.targetSong);\n      state = updateIn(state, ['radioStation'], () => \"Bluetooth\");\n      break;\n\n      case TUNE_RADIO:\n      state = updateIn(state, ['nowPlaying'], () => \"Thriller - Michael Jackson\" );\n      state = updateIn(state, ['radioStation'], () => payload.targetStation);\n      break;\n\n    default: break;\n  }\n\n  return state;\n}\n","import { SET_DESTINATION } from '../action/setDestination';\n\nconst DEFAULT_STATE = {\n  estimatedTimeOfArrival: null,\n  fullAddress: null\n  // estimatedTimeOfArrival: new Date(2018, 9, 25, 12, 15),\n  // fullAddress: 'Hong Kong International Airport'\n};\n\nexport default function (state = DEFAULT_STATE, { payload, type }) {\n  switch (type) {\n    case SET_DESTINATION:\n      state = { ...state, estimatedTimeOfArrival: payload.estimatedTimeOfArrival };\n      state = { ...state, fullAddress: payload.fullAddress };\n      break;\n\n    default: break;\n  }\n\n  return state;\n}\n","import { combineReducers } from 'redux';\n\nimport climateControl from './reducer/climateControl';\nimport audioControl from './reducer/audioControl';\nimport navigation from './reducer/navigation';\n\nexport default combineReducers({\n  climateControl,\n  navigation,\n  audioControl,\n})\n","export const ADJUST_TEMPERATURE = 'CLIMATE_CONTROL/ADJUST_TEMPERATURE';\n\nexport default function (targetTemperature) {\n  return {\n    type: ADJUST_TEMPERATURE,\n    payload: {\n      targetTemperature\n    }\n  };\n}\n","export const SET_DESTINATION = 'NAVIGATION/SET_DESTINATION';\n\nexport default function (fullAddress, estimatedTimeOfArrival) {\n  return {\n    type: SET_DESTINATION,\n    payload: {\n      estimatedTimeOfArrival,\n      fullAddress\n    }\n  }\n}\n","export const PLAY_MUSIC = 'AUDIO/PLAY_MUSIC';\n\nexport default function (targetSong) {\n  return {\n    type: PLAY_MUSIC,\n    payload: {\n      targetSong\n    }\n  };\n}","export const TUNE_RADIO = 'AUDIO/TUNE_RADIO';\n\nexport default function (targetStation) {\n  return {\n    type: TUNE_RADIO,\n    payload: {\n      targetStation\n    }\n  };\n}","import { createStore } from 'redux';\n\nimport rootReducer from './rootReducer';\n\nexport default function () {\n  return createStore(rootReducer);\n}\n","import { connect } from 'react-redux';\nimport React from 'react';\n\nimport Artboard from './assets/ArtboardElaineCroppedEmptied.png';\nimport './RightPane.css';\n\nfunction formatTime(date) {\n  date = new Date(date);\n\n  const hours = date.getHours() % 12;\n\n  return `${ hours || '12' }:${ pad(date.getMinutes()) } ${ date.getHours() < 12 ? 'AM' : 'PM' }`;\n}\n\nfunction pad(value, count = 2, padding = '0') {\n  value += '';\n  count -= value.length;\n\n  while (count--) {\n    value = padding + value;\n  }\n\n  return value;\n}\n\nexport default connect(({ climateControl, navigation, audioControl }) => ({\n  driverSideTemperature: climateControl.driverSideTemperature,\n  outsideTemperature: climateControl.outsideTemperature,\n  nowPlayingSong: audioControl.nowPlaying,\n  currentRadioStation: audioControl.radioStation,\n  navigationEstimatedTimeOfArrival: navigation.estimatedTimeOfArrival,\n  navigationFullAddress: navigation.fullAddress\n}))(({\n  driverSideTemperature,\n  outsideTemperature,\n  nowPlayingSong,\n  currentRadioStation,\n  navigationEstimatedTimeOfArrival,\n  navigationFullAddress\n}) => {\n  return (\n    <div className=\"right-pane\">\n      <div className=\"box\">\n        <div className=\"translucent\" />\n        <img\n          alt=\"\"\n          className=\"placeholder\"\n          src={ Artboard }\n        />\n        <div className=\"driver-side-temperature\">{ driverSideTemperature }&deg;</div>\n        <div className=\"outside-temperature\">{ outsideTemperature }&deg;</div>\n        <div className=\"real-time-clock\">{ formatTime(new Date()) }</div>\n        {\n          !!navigationEstimatedTimeOfArrival &&\n            <div className=\"destination-eta\">\n              <span>DESTINATION</span><br />\n              <span>\n                { `ARRIVE AT ${ formatTime(navigationEstimatedTimeOfArrival) }` }\n              </span>\n            </div>\n        }\n        {\n          !!navigationFullAddress &&\n            <div className=\"destination-full-address\">\n              { navigationFullAddress }\n            </div>\n        }\n        <div className=\"now-playing\">{ nowPlayingSong }</div>\n        <div className=\"radio-station\">{ currentRadioStation }</div>\n      </div>\n    </div>\n  );\n})\n","import { HostConfig } from 'adaptivecards';\n\nexport default new HostConfig({\n  containerStyles: {\n    default: {\n      backgroundColor: '#00000000',\n      foregroundColors: {\n        default: {\n          default: '#FFFFFFFF',\n          subtle: '#EEFFFFFF'\n        },\n        accent: {\n          default: '#FF2E89FC',\n          subtle: '#882E89FC'\n        },\n        attention: {\n          default: '#FFCC3300',\n          subtle: '#DDCC3300'\n        },\n        good: {\n          default: '#FF54A254',\n          subtle: '#DD54A254'\n        },\n        warning: {\n          default: '#FFE69500',\n          subtle: '#DDE69500'\n        }\n      }\n    },\n    emphasis: {\n      backgroundColor: '#08000000',\n      foregroundColors: {\n        default: {\n          default: '#FFFFFFFF',\n          subtle: '#EEFFFFFF'\n        },\n        accent: {\n          default: '#FF2E89FC',\n          subtle: '#882E89FC'\n        },\n        attention: {\n          default: '#FFCC3300',\n          subtle: '#DDCC3300'\n        },\n        good: {\n          default: '#FF54A254',\n          subtle: '#DD54A254'\n        },\n        warning: {\n          default: '#FFE69500',\n          subtle: '#DDE69500'\n        }\n      }\n    }\n  },\n\n  supportsInteractivity: true,\n  fontFamily: 'Calibri, \\'Helvetica Neue\\', Arial, sans-serif',\n  imageSizes: {\n    small: 40,\n    medium: 80,\n    large: 160\n  },\n  actions: {\n    actionAlignment: 'stretch',\n    actionsOrientation: 'vertical',\n    buttonSpacing: 8,\n    maxActions: 100,\n    showCard: {\n      actionMode: 'inline',\n      inlineTopMargin: 8\n    },\n    spacing: 'default'\n  },\n  adaptiveCard: {\n    allowCustomStyle: false\n  },\n  imageSet: {\n    imageSize: 'medium',\n    maxImageHeight: 100\n  },\n  factSet: {\n    title: {\n      color: 'default',\n      size: 'default',\n      isSubtle: false,\n      weight: 'bolder',\n      wrap: true,\n      maxWidth: 150\n    },\n    value: {\n      color: 'default',\n      size: 'default',\n      isSubtle: false,\n      weight: 'default',\n      wrap: true\n    },\n    spacing: 8\n  }\n})\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport './WebChat.css';\nimport adaptiveCardHostConfig from './AdaptiveCardHostConfig';\n\nimport adjustTemperature from './data/action/adjustTemperature';\nimport setDestination from './data/action/setDestination';\nimport playMusic from './data/action/playMusic';\nimport tuneRadio from './data/action/tuneRadio';\n\nimport {\n  createBrowserWebSpeechPonyfillFactory,\n  createDirectLine,\n  createStore,\n  createStyleSet,\n  default as ReactWebChat\n} from 'botframework-webchat';\n\nclass WebChat extends Component {\n  constructor(props) {\n    super(props);\n\n    let styleSet = createStyleSet({\n      backgroundColor: 'rgba(255, 255, 255, .4)',\n      bubbleBackground: '#444',\n      bubbleBorder: 0,\n      bubbleTextColor: 'White',\n      bubbleFromUserBackground: '#0CF',\n      bubbleFromUserBorder: 0,\n      timestampColor: 'White'\n    });\n\n    styleSet = { ...styleSet,\n      root: { ...styleSet.root,\n        backdropFilter: 'blur(8px)'\n      }\n    };\n\n    this.state = {\n      directLine: null,\n      store: createStore(\n        {},\n        () => next => action => {\n          if (action.type === 'DIRECT_LINE/INCOMING_ACTIVITY') {\n            const { activity } = action.payload;\n\n            if (\n              activity.type === 'event'\n              && activity.name === 'ActiveRoute.Directions'\n            ) {\n              try {\n                this.props.setDestination({\n                  estimatedTimeOfArrival: new Date(Date.now() + 15 * 60000),\n                  fullAddress: activity.value.Destination.address.formattedAddress\n                });\n              } catch (err) {\n                console.error(err);\n              }\n            }\n\n            if (\n              activity.type === 'event'\n              && activity.name === 'ChangeTemperature'\n            ) {\n              this.props.adjustTemperature(activity.value);\n            }\n\n            if (\n              activity.type === 'event'\n              && activity.name === 'TuneRadio'\n            ) {\n              this.props.tuneRadio(activity.value);\n            }\n\n            if (\n              activity.type === 'event'\n              && activity.name === 'PlayMusic'\n            ) {\n              this.props.playMusic(activity.value);\n            }\n\n            // For demonstration purpose only: every time an activity come from DirectLineJS, we will change the driver side temperature to some random values\n            // this.props.adjustTemperature(~~(Math.random() * 10) + 65);\n          }\n\n          return next(action);\n        }\n      ),\n      styleSet,\n      webSpeechPonyfillFactory: createBrowserWebSpeechPonyfillFactory()\n    };\n  }\n\n  getTokenURL(locale) {\n    switch ((locale || '').trim().toLowerCase()) {\n      case 'en-us':\n        return 'https://hawo-webchat-virtual-assistant-demo-en-us.azurewebsites.net/directline/token';\n\n      default:\n        return 'https://hawo-webchat-virtual-assistant-demo.azurewebsites.net/directline/token';\n    }\n  }\n\n  async componentDidMount() {\n    const res = await fetch(this.getTokenURL(this.props.locale), { method: 'POST' });\n    const { token, userID } = await res.json();\n\n    var directLine = createDirectLine({token});\n\n    this.setState(() => ({\n      directLine: directLine,\n      userID\n    }));\n\n    directLine.postActivity({\n      from: { id: userID, name: \"User\", role: \"user\"},\n      name   : 'startConversation',\n      type   : 'event',\n      locale : this.props.locale,\n      value  : ''\n    })\n    .subscribe(function (id) {\n      console.log('trigger \"conversationUpdate\" sent');\n    });\n  }\n\n  render() {\n    const {\n      props: { locale },\n      state: { directLine, store, styleSet, userID, webSpeechPonyfillFactory }\n    } = this;\n\n    return (\n      <div className=\"web-chat\">\n        {\n          !!directLine &&\n            <ReactWebChat\n              adaptiveCardHostConfig={ adaptiveCardHostConfig }\n              directLine={ directLine }\n              locale={ locale }\n              store={ store }\n              styleSet={ styleSet }\n              userID={ userID }\n              webSpeechPonyfillFactory={ webSpeechPonyfillFactory }\n            />\n        }\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  () => ({}),\n  {\n    adjustTemperature,\n    setDestination,\n    playMusic,\n    tuneRadio\n  }\n)(WebChat)\n","import { Provider } from 'react-redux';\nimport React, { Component } from 'react';\nimport './App.css';\n\nimport createStore from './data/createStore';\nimport RightPane from './RightPane';\nimport WebChat from './WebChat';\n\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n\n    const searchParams = new URLSearchParams(window.location.search);\n\n    this.state = {\n      locale: searchParams.get('locale') || window.navigator.language,\n      store: createStore()\n    };\n  }\n\n  render() {\n    const { state: { store } } = this;\n\n    return (\n      <Provider store={ store }>\n        <div className=\"app\">\n          <WebChat locale={ this.state.locale } />\n          <RightPane />\n        </div>\n      </Provider>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/ArtboardElaineCroppedEmptied.e85d55f6.png\";"],"sourceRoot":""}